@using Common.Models
@using FrontEnd.Services
@inject NavigationManager NavigationManager
@inject AppState AppState
@inherits LayoutComponentBase
<RadzenComponents/>
<div hidden="true">
</div>
<RadzenLayout Style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body'">
    <RadzenHeader Style="display: grid;">
        <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
            <RadzenColumn Size="5">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Normal" Wrap="FlexWrap.NoWrap">
                    <AuthorizeView>
                        <Authorized>
                            @if(IsAdmin)
                            {
                                <RadzenSidebarToggle class="rz-me-0" Click="@(() => sidebarExpanded = !sidebarExpanded)"/>
                            }
                        </Authorized>
                    </AuthorizeView>
                    <a href="/">
                        <RadzenImage Path="Resources/brod-white.svg" Style="height: 35px; display:flex;" class="rz-ms-1"/>
                    </a>
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="7">
                <RadzenStack class="me-3" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Wrap="FlexWrap.NoWrap">
                    <AuthorizeView>
                        <Authorized>
                            <RadzenButton Click="@(() => NavigationManager.NavigateTo("checkout", false))" ButtonStyle="ButtonStyle.Light" Variant="Variant.Outlined" Icon="shopping_cart" Text="@AppState.Amount.ToString()"></RadzenButton>
                            <RadzenProfileMenu>
                                <Template>
                                    <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Filled" Icon="person" Text="@Name"></RadzenButton>
                                </Template>
                                <ChildContent>
                                    <RadzenProfileMenuItem Text="Hantera konto" Path="account/manage" Icon="person"></RadzenProfileMenuItem>
                                    <RadzenProfileMenuItem Text="Mina ordrar" Path="mina-ordrar" Icon="shopping_cart"></RadzenProfileMenuItem>
                                    <form class="rz-ms-4" action="Account/Logout" method="post">
                                        <AntiforgeryToken/>
                                        <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                                        <button type="submit" class="btn btn-outline-dark">
                                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span>Logout
                                        </button>
                                    </form>
                                </ChildContent>
                            </RadzenProfileMenu>
                        </Authorized>
                        <NotAuthorized>
                            <RadzenLink Icon="person_add" Path="account/register" Text="Registrera"/>
                            <RadzenLink Icon="login" Path="account/login" Text="Logga in"/>
                        </NotAuthorized>
                    </AuthorizeView>
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenHeader>
    <AuthorizeView>
        <Authorized>
            @if (IsAdmin)
            {
                <RadzenSidebar @bind-Expanded="@sidebarExpanded">
                    <RadzenPanelMenu>
                        <NavMenu/>
                    </RadzenPanelMenu>
                </RadzenSidebar>
            }
        </Authorized>
    </AuthorizeView>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;
    private string? currentUrl;
    private Customer CurrentCustomer { get; set; }
    private bool IsAdmin { get; set; }
    private string Name { get; set; }
    private List<Product> Cart { get; set; } = new();
    
}

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
